# @generated by generate_proto_mypy_stubs.py.  Do not edit!
from abc import (
    ABCMeta as abc___ABCMeta,
    abstractmethod as abc___abstractmethod,
)

from concurrent.futures import (
    Future as concurrent___futures___Future,
)

from google.protobuf.empty_pb2 import (
    Empty as google___protobuf___empty_pb2___Empty,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Any as typing___Any,
    Callable as typing___Callable,
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)


class ListCbrRatesRequest(google___protobuf___message___Message):
    date = ... # type: typing___Text

    def __init__(self,
        date : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ListCbrRatesRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class ListCbrRatesResponse(google___protobuf___message___Message):

    @property
    def rates(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[CbrRate]: ...

    def __init__(self,
        rates : typing___Optional[typing___Iterable[CbrRate]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ListCbrRatesResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class CbrRate(google___protobuf___message___Message):
    date = ... # type: typing___Text
    char_code = ... # type: typing___Text
    rate = ... # type: float
    name = ... # type: typing___Text

    def __init__(self,
        date : typing___Optional[typing___Text] = None,
        char_code : typing___Optional[typing___Text] = None,
        rate : typing___Optional[float] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CbrRate: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class GetMeResponse(google___protobuf___message___Message):
    user_id = ... # type: int

    def __init__(self,
        user_id : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetMeResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class CurrencyRate(typing___Any, metaclass=abc___ABCMeta):
    @abc___abstractmethod
    def ListCbrRates(self,
        rpc_controller: typing___Any,
        request: ListCbrRatesRequest,
        done: typing___Optional[typing___Callable[[ListCbrRatesResponse], None]],
    ) -> concurrent___futures___Future[ListCbrRatesResponse]: ...
class CurrencyRate_Stub(CurrencyRate):
    def __init__(self, rpc_channel: typing___Any) -> None: ...
    def ListCbrRates(self,
        rpc_controller: typing___Any,
        request: ListCbrRatesRequest,
        done: typing___Optional[typing___Callable[[ListCbrRatesResponse], None]],
    ) -> concurrent___futures___Future[ListCbrRatesResponse]: ...
class User(typing___Any, metaclass=abc___ABCMeta):
    @abc___abstractmethod
    def GetMe(self,
        rpc_controller: typing___Any,
        request: google___protobuf___empty_pb2___Empty,
        done: typing___Optional[typing___Callable[[GetMeResponse], None]],
    ) -> concurrent___futures___Future[GetMeResponse]: ...
class User_Stub(User):
    def __init__(self, rpc_channel: typing___Any) -> None: ...
    def GetMe(self,
        rpc_controller: typing___Any,
        request: google___protobuf___empty_pb2___Empty,
        done: typing___Optional[typing___Callable[[GetMeResponse], None]],
    ) -> concurrent___futures___Future[GetMeResponse]: ...